{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 						Uptown Algorithm Master\
\
When creating our algorithm, there was already a large body of solid literature on the subject of personal training. We began by identifying common factors in workout building to define the variables for producing directed workouts. The first thing we identified was a variety in number of sets and reps in combination and for which combinations we could relate to or first variable. This variable we named workout goal and our current application supports goals of many different values: \'93General Fitness\'94, \'93General Muscle\'94, \'93Building Endurance\'94, \'93Building Strength\'94, and \'93Losing Weight\'94. Each of these has a range of sets and reps along with rest times which are recommended in personal training certification manuals for achieving these goals. We combined in the idea of an intensity slider to allow the range in the sets and reps to vary within a given goal. Knowing that sets and reps schemes are based on a goal means that the next step toward having a fully functioning algorithm is being able to accurately model power production, fatigue, and recovery in order to give appropriate weight and rep numbers based on the basic set scheme. To create this model I used data collected from working with a personal trainer to derive numerically a set of equations which governed power production from muscles as a spectrum of equations based on weight and reps. Using these equations it was trivial to show that they were all tied to body areas based on muscle groupings. This led to the conclusion that every body area muscle grouping produces power in a similar fashion and that exercises which work the same body areas follow the same power production process with a ratio of initial conditions determining their relationship to the underlying body area. Working with this as a mathematical model we were able to refine the fatigue recovery relationship through further testing. Furthermore, by simplifying the equation, we were able to reduce every body area to a set of two floating point values which determine the fixed variables in the power production equation. Now that we had a way to build basic routines based on goal and give accurate numbers for weight and reps along with an understanding of how those weight and reps numbers would change over time we had to determine how to organize exercises into meaningful routines. We began with a database of exercises which had been sorted by name and given several other criteria: \'93alternate name/s\'94, \'93body area\'94, \'93muscle groups\'94, \'93technique\'94, \'93rate\'94, \'93space necessary\'94, \'93equipment required\'94, \'93exercise category\'94, etc. The exercise category let us group exercises based on the traditional type of workout in which one would encounter them. We started out with \'93Strength\'94, for weight room type workouts, \'93Cross\'94, for olympic lifts, plyometrics, and complex Crossfit type workouts, \'93Cardio\'94, for high intensity interval training type workouts, \'93Yoga\'94, for yoga workouts but requiring a separate type of algorithm, \'93Core\'94, for oblique and abdominal workouts, and then allowed for the building of custom workouts.\
Now we had all the pieces for our working algorithm. First, when a user signs up they provide their basic goal from the five above as well as their preferred intensity level and workout ability, \'93Beginner\'94, \'93Intermediate\'94, or \'93Advanced\'94. Then when they chose a workout type from \'93Cardio\'94, \'93Strength\'94, \'93Core\'94, \'93Cross\'94, or \'93Stretch\'94. Then for strength and stretch they can choose a body area. After that they set their location, time, and intensity. To build a workout from these values we start by building a \'93program\'94 from the exercise database based upon their inputs. This program is a list of possible exercises which are of the selected type and one is made for each selected body area, if available. Exercises which do not fit the area size or require equipment not in the selected location are eliminated. Then exercises are picked one by one, based upon experience level and popularity for each of the exercises, from these programs and added to a workout by filling in the required number of sets and rest times from the workout goal and reps, weight, and duration calculated where needed using the power production model of the user and using time estimates for each rep. Then when the last exercise takes the workout over the target time it is not added and instead the whole workout is ordered based upon the body area, weight, and reps for each exercise. This gives targeted, accurate, full workouts based upon workout category and goal. New exercises can be easily substituted in from the program created for the workout. After each workout is finished all the user\'92s affected body areas are updated based upon the numbers from the finished workout by reverse engineering the process which produces the workout and compensating for expected growth based upon fatigue generated and recovery expected.}